// == task_status_adaptation.js (–í–µ—Ä—Å–∏—è 7.0, –±–µ–∑ Shadow DOM, –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø) ==

if (typeof window.__culmsLongreadFixInitialized === 'undefined') {
    window.__culmsLongreadFixInitialized = true;

    'use strict';

    // --- –ö–û–ù–°–¢–ê–ù–¢–´ ---
    const SKIPPED_TASKS_KEY = 'cu.lms.skipped-tasks';
    const SKIPPED_STATUS_TEXT = "–ú–µ—Ç–æ–¥ —Å–∫–∏–ø–∞";
    const EMOJI_REGEX = /[üî¥üîµ‚ö´Ô∏è‚ö´‚ù§Ô∏èüíôüñ§]/g;

    // --- –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ---
    function stripEmojis(text) {
        if (!text) return '';
        return text.replace(EMOJI_REGEX, '').trim();
    }

    function getSkippedTasks() {
        try {
            const skipped = localStorage.getItem(SKIPPED_TASKS_KEY);
            return skipped ? new Set(JSON.parse(skipped)) : new Set();
        } catch (e) { return new Set(); }
    }

    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–¥–∏–Ω –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç <cu-student-task>.
     * @param {HTMLElement} taskElement - –≠–ª–µ–º–µ–Ω—Ç <cu-student-task>.
     * @param {Set<string>} skippedTasks - –ù–∞–±–æ—Ä –≤—Å–µ—Ö –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á.
     */
    function processTaskElement(taskElement, skippedTasks) {
        // –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞–ø—Ä—è–º—É—é –≤–Ω—É—Ç—Ä–∏ taskElement, –±–µ–∑ shadowRoot.
        const taskNameElement = taskElement.querySelector('.task-name');
        const statusChipElement = taskElement.querySelector('tui-chip');

        if (!taskNameElement || !statusChipElement) {
            // –ï—Å–ª–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –µ—â–µ –Ω–µ –æ—Ç—Ä–∏—Å–æ–≤–∞–ª–∏—Å—å, MutationObserver –≤—ã–∑–æ–≤–µ—Ç –Ω–∞—Å —Å–Ω–æ–≤–∞.
            return;
        }
        
        // –ü–æ–º–µ—á–∞–µ–º, —á—Ç–æ–±—ã –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ –≤ —Ç–æ–º –∂–µ —Ü–∏–∫–ª–µ.
        taskElement.setAttribute('data-culms-processed', 'true');

        const taskNameOnPage = stripEmojis(taskNameElement.textContent.trim()).toLowerCase();
        
        let isTaskSkipped = false;
        for (const skippedIdentifier of skippedTasks) {
            const storedTaskName = skippedIdentifier.split('::')[1];
            if (storedTaskName && storedTaskName === taskNameOnPage) {
                isTaskSkipped = true;
                break;
            }
        }

        if (isTaskSkipped) {
            window.cuLmsLog(`Longread Fix: Match found! Applying 'skipped' status to task "${taskNameOnPage}"`);

            if (!statusChipElement.dataset.originalStatus) {
                statusChipElement.dataset.originalStatus = statusChipElement.textContent.trim();
            }

            statusChipElement.textContent = SKIPPED_STATUS_TEXT;
            statusChipElement.dataset.culmsStatus = 'skipped';
        }
    }

    /**
     * –í–Ω–µ–¥—Ä—è–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞.
     */
    function injectGlobalStyles() {
        const styleId = 'culms-longread-fix-styles';
        if (document.getElementById(styleId)) return;

        const style = document.createElement('style');
        style.id = styleId;
        style.textContent = `
            /* –°—Ç–∏–ª–∏–∑—É–µ–º —á–∏–ø –≤–Ω—É—Ç—Ä–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –ø–æ data-–∞—Ç—Ä–∏–±—É—Ç—É */
            cu-student-task tui-chip[data-culms-status="skipped"] {
                background-color: #b516d7 !important;
                color: white !important;
            }
        `;
        document.head.appendChild(style);
    }
    
    /**
     * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –∏—â–µ—Ç –Ω–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –∏—Ö –æ–±—Ä–∞–±–æ—Ç–∫—É.
     */
    function runCheck() {
        const skippedTasks = getSkippedTasks();
        if (skippedTasks.size === 0) return;

        // –ò—â–µ–º –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–¥–∞—á, –∫–æ—Ç–æ—Ä—ã–µ –µ—â–µ –Ω–µ –±—ã–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã.
        const taskElements = document.querySelectorAll('cu-student-task:not([data-culms-processed])');
        
        if (taskElements.length > 0) {
             taskElements.forEach(element => processTaskElement(element, skippedTasks));
        }
    }

    // --- –ó–ê–ü–£–°–ö –°–ö–†–ò–ü–¢–ê ---

    if (window.location.href.includes('/longreads/')) {
        if(!window.cuLmsLog) {
            window.cuLmsLog = console.log.bind(window.console, '%cCU LMS Fix:', 'background: #4A5568; color: #E2E8F0; padding: 2px 6px; border-radius: 4px;');
        }
        
        injectGlobalStyles();
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –æ–¥–∏–Ω —Ä–∞–∑ –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –∫–æ–Ω—Ç–µ–Ω—Ç —É–∂–µ –µ—Å—Ç—å.
        setTimeout(runCheck, 500);

        // –ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å —Å–ª–µ–¥–∏—Ç –∑–∞ –ø–æ—è–≤–ª–µ–Ω–∏–µ–º –Ω–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ DOM.
        const observer = new MutationObserver(runCheck);
        observer.observe(document.body, {
            childList: true,
            subtree: true
        });

        window.cuLmsLog('Longread Fix: Observer initialized and watching for tasks.');
    }
}